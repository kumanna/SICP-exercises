(define (make-account balance account-password)
  (define (withdraw amount)
    (if (>= balance amount)
	(begin (set! balance (- balance amount)) balance)
	"Insufficient funds!"))
  (define (deposit amount)
    (set! balance (+ amount balance))
    balance)
  (define (dispatch password m)
    (if (eq? password account-password)
	(cond ((eq? m 'withdraw) withdraw)
	      ((eq? m 'deposit) deposit)
	      (else (error "Unknown mode!")))
	(lambda (x) "Access denied!")))
  dispatch)

(define (make-joint old-account old-password new-password)
  (define (dispatch password action)
    (if (eq? password new-password)
	(old-account old-password action)
	(lambda (x) "Access denied!")))
  dispatch)

(define acc (make-account 100 'secret))
(display ((acc 'secret 'withdraw) 30))
(newline)
(display ((acc 'secret 'deposit) 100))
(newline)
(display ((acc 'secret2 'withdraw) 100))
(newline)
(define new-acc (make-joint acc 'secret 'new-secret))
(display ((new-acc 'new-secret 'withdraw) 30))
(newline)
(display ((new-acc 'new-secret 'deposit) 100))
(newline)
(display ((acc 'secret 'withdraw) 30))
(newline)
(display ((acc 'secret 'deposit) 100))
(newline)
